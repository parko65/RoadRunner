// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace RoadRunner.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20250731130425_AddTonnageToJob")]
    partial class AddTonnageToJob
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Aggregate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AggregateId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HotBinId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("HotBinId")
                        .IsUnique()
                        .HasFilter("[HotBinId] IS NOT NULL");

                    b.ToTable("Aggregates");
                });

            modelBuilder.Entity("Entities.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DestinationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinationType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DestinationType = 0,
                            Name = "Bin 1"
                        },
                        new
                        {
                            Id = 2,
                            DestinationType = 1,
                            Name = "YM73 VSC"
                        });
                });

            modelBuilder.Entity("Entities.Models.HotBin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HotBinId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HotBins");
                });

            modelBuilder.Entity("Entities.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("JobNumber")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Tonnage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Entities.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecipeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BatchSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FixedBatchSize")
                        .HasColumnType("bit");

                    b.Property<int>("LowerTemperatureDeviation")
                        .HasColumnType("int");

                    b.Property<int>("MixTemperature")
                        .HasColumnType("int");

                    b.Property<int>("MixTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("UpperTemperatureDeviation")
                        .HasColumnType("int");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Entities.Models.RecipeHotBin", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("HotBinId")
                        .HasColumnType("int");

                    b.Property<double>("Take")
                        .HasColumnType("float");

                    b.HasKey("RecipeId", "HotBinId");

                    b.HasIndex("HotBinId");

                    b.ToTable("RecipeHotBins");
                });

            modelBuilder.Entity("Entities.Models.Aggregate", b =>
                {
                    b.HasOne("Entities.Models.HotBin", "HotBin")
                        .WithOne("Aggregate")
                        .HasForeignKey("Entities.Models.Aggregate", "HotBinId");

                    b.Navigation("HotBin");
                });

            modelBuilder.Entity("Entities.Models.Job", b =>
                {
                    b.HasOne("Entities.Models.Destination", "Destination")
                        .WithMany("Jobs")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Recipe", "Recipe")
                        .WithMany("Jobs")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Entities.Models.RecipeHotBin", b =>
                {
                    b.HasOne("Entities.Models.HotBin", "HotBin")
                        .WithMany("RecipeHotBins")
                        .HasForeignKey("HotBinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Recipe", "Recipe")
                        .WithMany("RecipeHotBins")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotBin");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Entities.Models.Destination", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Entities.Models.HotBin", b =>
                {
                    b.Navigation("Aggregate");

                    b.Navigation("RecipeHotBins");
                });

            modelBuilder.Entity("Entities.Models.Recipe", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("RecipeHotBins");
                });
#pragma warning restore 612, 618
        }
    }
}
