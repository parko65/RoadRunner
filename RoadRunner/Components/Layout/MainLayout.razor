@using Microsoft.FluentUI.AspNetCore.Components.Extensions
﻿@using Microsoft.Extensions.Hosting
@inherits LayoutComponentBase
@inject IHostEnvironment Host

<FluentDesignTheme Mode="@Mode"
                   OfficeColor="OfficeColor.Sway"
                   StorageName="theme" />

<FluentLayout>
    <FluentHeader>
        Road Runner
        <FluentSpacer />
        <FluentButton Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.DarkTheme())" OnClick="SwitchTheme" Title="Theme" />
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">        
        <FluentBodyContent Class="body-content">            
            <div class="content">
                <FluentMessageBarProvider Section="@MESSAGES_TOP" ClearAfterNavigation="true" />                
                <ErrorBoundary @ref="_errorBoundary">
                    <ChildContent>                        
                        @Body
                    </ChildContent>
                    <ErrorContent>                        
                        <Error ErrorMessage="@context.Message">
                            <ErrorContent>
                                <p>Additional content goes here.</p>                                
                            </ErrorContent>   
                        </Error>
                    </ErrorContent>
                </ErrorBoundary>                
            </div>
            
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter>
        <a href="privacy">Privacy Information</a>
        <FluentSpacer />
        <a href="">&copy; 2025 - Road Runner v@_version</a>
        <FluentSpacer />
        <a href="about">About Road Builder Hybrid</a>
    </FluentFooter>
</FluentLayout>

<FluentToastProvider MaxToastCount="5" Position="ToastPosition.BottomRight" Timeout="5000" />
<FluentDialogProvider />
<FluentTooltipProvider />

@code {
    private ErrorBoundary? _errorBoundary;

    public const string MESSAGES_NOTIFICATION_CENTER = "NOTIFICATION_CENTER";
    public const string MESSAGES_TOP = "TOP";
    public const string MESSAGES_DIALOG = "DIALOG";
    public const string MESSAGES_CARD = "CARD";

    public DesignThemeModes Mode = DesignThemeModes.System;

    private void SwitchTheme()
    {
        Mode = Mode != DesignThemeModes.Dark ? DesignThemeModes.Dark : DesignThemeModes.Light;
    }

    protected override void OnParametersSet()
    {
        _errorBoundary?.Recover();
    }

    // Get the current version of the application
    private string? _version;

    protected override void OnInitialized()
    {
        // Initialize the version from the assembly information
        _version = System.Reflection.Assembly.GetExecutingAssembly()
            .GetName()
            .Version?
            .ToString();
    }
}
